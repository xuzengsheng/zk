spring:
  application:
    name: nccs-user
  main:
    allow-bean-definition-overriding: true  #当遇到同样名字的时候，是否允许覆盖注册
  profiles:
    active: dev #设置启用环境  根据后缀读取nacos中相应环境的配置文件(nacos中配置文件名称为： nacos-consumer-dev  、 nacos-consumer-test、 nacos-consumer-pro )
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
      config:
        server-addr: 127.0.0.1:8848
        file-extension: yml


  #activemq消息队列
#  activemq:
#    broker-url: tcp://localhost:61616
#    in-memory: true
#    pool:
#      enabled: true   #是否使用连接池 如果此处设置为true，需要加activemq-pool的依赖包，否则会自动配置失败，报JmsMessagingTemplate注入失败
#      max-connections: 10  #最大连接数
#      idle-timeout: 30000  #空闲的连接过期时间，默认为30秒


  #feign:
  #  #设置熔断降级 默认为false
  #  hystrix:
  #    enabled: true



  #数据库
#  datasource:
#    url: jdbc:mysql://localhost:3306/nccs_user?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=false
#    username: root
#    password: root
#    driver-class-name: com.mysql.cj.jdbc.Driver
#
#server:
#  port: 9001
#spring:
#  cloud:
#    gateway:
#      discovery:
#        locator:
#          # 是否和服务注册与发现组件结合，设置为 true 后可以直接使用应用名称调用服务
#          enabled: true
#      # 路由（routes：路由，它由唯一标识（ID）、目标服务地址（uri）、一组断言（predicates）和一组过滤器组成（filters）。filters 不是必需参数。）
#      routes:
#        - id: nccs-user
#          filters:
#            - StripPrefix=1
#          predicates:
#            - name: Path
#              args[pattern]: /b/**     #断言 与该格式匹配的路由会进行转发
#          uri: lb://nccs-user          #uri以lb://开头（lb代表从注册中心获取服务），后面接的就是需要转发到的服务名称

#  redis:
#    database: 0        # 设置存储分片 db0
#    host: localhost
#    port: 6379
#    password:



sharding:
  jdbc:
    dataSource:
      names: db0,db1,db2   #注册需要sharding管理的数据库名称
      # 配置主库 主库只用来写  从库用来读
      db0: #org.apache.tomcat.jdbc.pool.DataSource
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/nccs_user?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: root
        #最大连接数
        maxPoolSize: 20
      db1: # 配置第一个从库
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/nccs_user02?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&serverTimezone=GMT
        username: root
        password: root
        maxPoolSize: 20
      db2: # 配置第二个从库
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/nccs_user03?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&serverTimezone=GMT
        username: root
        password: root
        maxPoolSize: 20
    config:
      masterslave: # 配置读写分离
        load-balance-algorithm-type: round_robin # 配置从库选择策略，提供轮询与随机，这里选择用轮询//random 随机 //round_robin 轮询
        name: db0
        master-data-source-name: db0      #指定主库
        slave-data-source-names: db1,db2  #指定从库
    props:
      sql: # 开启SQL显示，默认值: false，注意：仅配置读写分离时不会打印日志！！！
        show: true

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启sql日志

